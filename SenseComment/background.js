// –°–æ–∫–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 8765
let webSocket = new WebSocket("ws://localhost:8765");

webSocket.onopen = () => {
  console.log("WebSocket connection established");
};

webSocket.onclose = () => {
  console.log("WebSocket connection closed");
  webSocket = null;
};

webSocket.onerror = (error) => {
  console.error("WebSocket error: ", error);
};

function disconnect() {
  if (webSocket) {
    webSocket.close();
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ—Ç yt_content_script.js –∏ vk_content_script.js
chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
  if (!message) {
    sendResponse("The content is not supported");
  } else if (webSocket) {
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    webSocket.send(message);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –∫ yt_content_script.js –∏–ª–∏ vk_content_script
    webSocket.onmessage = (event) => {
      try {
        const dataList = JSON.parse(event.data.replace(/'/g, '"'));
        console.log(message, event.data, pickEmoji(dataList));
        sendResponse(pickEmoji(dataList));
      } catch (error) {
        console.log('Error: ', message, event.data, error);
        sendResponse(event.data);
      }
    };
  } else {
    sendResponse("WebSocket connection is not established");
  }
  return true;
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —ç–º–æ–¥–∑–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
function pickEmoji(response) {
  if (Array.isArray(response)) {
    let negativeScore = parseFloat(response[0][2]["score"]);
    let positiveScore = parseFloat(response[0][0]["score"]);

    if (negativeScore > 0.7) {
      return "üò°";
    } else if (positiveScore > 0.7) {
      return "üòÄ";
    } else {
      return "üòê";
    }
  } else {
    return response;
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –∫ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É
chrome.runtime.onInstalled.addListener(() => {
  chrome.contextMenus.create({
    id: "highlight",
    title: "–û—Ü–µ–Ω–∏—Ç—å —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ç–µ–∫—Å—Ç–∞",
    contexts: ["selection"],
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∫–ª–∏–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
chrome.contextMenus.onClicked.addListener((info, tab) => {
  if (info.menuItemId === "highlight" && info.selectionText) {
    console.log(info);

    // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç HTML –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, 
    // –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä, 
    // –≤—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–¥ —ç–ª–µ–º–µ–Ω—Ç–æ–º –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ 
    chrome.scripting.executeScript(
      {
        target: { tabId: tab.id },
        func: getElementContainingSelection, // –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
      },
      (results) => {
        if (results && results[0] && results[0].result) {
          const { elementHTML, elementText, selectionText } = results[0].result;
          console.log(elementHTML, elementText);

          // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
          if (webSocket) {
            webSocket.send(elementText);
            webSocket.onmessage = (event) => {
              try {
                const dataList = JSON.parse(event.data.replace(/'/g, '"'));
                const ans = pickEmoji(dataList);
                chrome.scripting.executeScript({
                  target: { tabId: tab.id },
                  func: addSmileyToElement, // –≤—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–¥ —ç–ª–µ–º–µ–Ω—Ç–æ–º –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
                  args: [elementHTML, ans],
                });
              } catch (error) {
                console.log('Error: ', elementText, event.data, error);
                chrome.scripting.executeScript({
                  target: { tabId: tab.id },
                  func: addSmileyToElement,
                  args: [elementHTML, "could not be determined"],
                });
              }
            };
          } else {
            console.log('Error: ', "WebSocket connection is not established");
          }
        }
      }
    );
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞, —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
function getElementContainingSelection() {
  const selection = window.getSelection();
  const range = selection.getRangeAt(0);
  const element = range.commonAncestorContainer.parentElement;
  return {
    elementHTML: element.innerHTML,
    elementText: element.innerText,
    selectionText: selection.toString(),
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–¥ —ç–ª–µ–º–µ–Ω—Ç –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
function addSmileyToElement(elementText, ans) {
  const selection = window.getSelection();
  const range = selection.getRangeAt(0);
  const element = range.commonAncestorContainer.parentElement;
  const newText = elementText + `<div>–¢–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ç–µ–∫—Å—Ç–∞: ${ans}</div>`;
  element.innerHTML = newText;
}
